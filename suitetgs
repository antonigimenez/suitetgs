#!/bin/bash
# ------------------------------------------------------------------
# [Author: Boyan Naydenov] TGS Control Suite
#  Terrassa Ground Station (UPC - ESEIAAT) script designed to handle
#  the different functional blocks (antenna controllers, radio, webcam).
# ------------------------------------------------------------------

VERSION=0.1
SUBJECT=suite-tgs
USAGE="$(basename "$0") [-h] [-v -c -r -g -a] -- Terrassa Ground Station (UPC - ESEIAAT) script designed to handle
the different functional blocks (antenna controllers, radio, webcam). 

where:
    -h  show this help text
    -v  show script version
    -c  view roof camera
    -C  kill camera process
    -r  start rotator daemon
    -R  kill rotator process
    -g  start GPredict
    -G  kill GPredict
    -a  start camera, rotator daemon and GPredict
    -A  kill all processes"

# --- Options processing -------------------------------------------
# If no arguments are given then help screen is shown.
if [ $# == 0 ] ; then
    echo $USAGE
    exit 1;
fi

while getopts "hvcCrRgGaA" opt; do
  case $opt in
    v)
        echo "Version $VERSION"
        exit 0;
        ;;    
    h) 
        echo "$USAGE"
        exit 0;
        ;;   
    c)
        echo "Showing Camera"
        vlc v4l2:///dev/video0 > /dev/null 2>&1 &
        retval=$?;
        if [ "$retval" != "0" ]; then
            echo "Return code was not zero but $retval"
            exit 1;
        fi
        exit 0;
        ;;
    C)
        mycmd() {
            ps -aux | less | grep vlc | sed -n '1 p' | awk '{ print $2 }'
        }
        id=$(mycmd)
        kill $id
        exit 0;
        ;;
    r)
        echo "Starting Rotor Daemon"
        rotctld -m 603 -r /dev/rotator > /dev/null 2>&1 &
        retval=$?;
        if [ "$retval" != "0" ]; then
            echo "Return code was not zero but $retval"
            exit 1;
        fi       
        exit 0;
        ;;
    R)
        mycmd() {
            ps -aux | less | grep rotctl | sed -n '1 p' | awk '{ print $2 }'
        }
        id=$(mycmd)
        kill $id
        exit 0;
        ;;
    g)
        echo "Start GPredict"
        gpredict > /dev/null 2>&1 &
        retval=$?;
        if [ "$retval" != "0" ]; then
            echo "Return code was not zero but $retval"
            exit 1;
        fi                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
        exit 0;
        ;;
    G) 
        mycmd() {
            ps -aux | less | grep gpredict | sed -n '1 p' | awk '{ print $2 }'
        }
        id=$(mycmd)
        kill $id
        exit 0;
        ;;        
    a)
        echo "Start camera, rotator daemon and GPredict"
        vlc v4l2:///dev/video0 > /dev/null 2>&1 &
        retval=$?;
        if [ "$retval" != "0" ]; then
            echo "Return code was not zero but $retval"
            exit 1;
        fi
        rotctld -m 603 -r /dev/rotator > /dev/null 2>&1 &
        retval=$?;
        if [ "$retval" != "0" ]; then
            echo "Return code was not zero but $retval"
            exit 1;
        fi
        gpredict > /dev/null 2>&1 &
        retval=$?;
        if [ "$retval" != "0" ]; then
            echo "Return code was not zero but $retval"
            exit 1;
        fi             
        exit 0;
        ;;
    A)
        mycmd() {
            ps -aux | less | grep vlc | sed -n '1 p' | awk '{ print $2 }'
        }
        mycmd1() {
            ps -aux | less | grep rotctl | sed -n '1 p' | awk '{ print $2 }'
        }
        mycmd2() {
            ps -aux | less | grep gpredict | sed -n '1 p' | awk '{ print $2 }'
        }                
        id=$(mycmd)
        kill $id        
        id=$(mycmd1)
        kill $id        
        id=$(mycmd2)
        kill $id                  
        exit 0;
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        exit 0;
        ;;
    :)
        echo "Option -$OPTARG requires an argument." >&2
        exit 0;
        ;;
    *)
        echo "Unknown error while processing options" >&2
        exit 0;
        ;;        
  esac
done

#shift $(($OPTIND - 1))

#param1=$1
#param2=$2

# --- Locks -------------------------------------------------------
# Avoids script to be run paralelly, using locks
LOCK_FILE=/tmp/$SUBJECT.lock
if [ -f "$LOCK_FILE" ]; then
   echo "Script is already running"
   exit
fi
# trap catches some SIGNALS such as KILL( Crtl + C) and deletes lock
trap "rm -f $LOCK_FILE" EXIT
touch $LOCK_FILE

# --- Body --------------------------------------------------------
#  SCRIPT LOGIC GOES HERE
#echo $param1
#echo $param2
# -----------------------------------------------------------------